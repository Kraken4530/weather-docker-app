services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: weatherdb
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d weatherdb"]
      interval: 2s
      timeout: 3s
      retries: 10
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - appnet

  backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql+asyncpg://user:password@postgres:5432/weatherdb
    networks:
      - appnet

  nginx:
    image: nginx:alpine
    container_name: nginx
    depends_on:
      - backend
    volumes:
      - ../nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    networks:
      - appnet

volumes:
  pg_data:

networks:
  appnet:
    driver: bridge
